@import "../base/dependencies";

.ParallaxMosaic {
	padding-bottom: 18rem;
	padding-bottom: calc(min(24rem, 24vw));
	padding-top: 6rem;
	padding-top: calc(min(12rem, 10vw));

	.tile {
		border-radius: 1rem;
		height: 80vmin;
		max-height: 50rem;
		pointer-events: none;
		width: 100%;
		z-index: 1;
	}

	.label {
		background: linear-gradient(to right, #E43425 31.77%, #441FD8 71.88%, #0A26B8 100%);
		background-color: #FFF;
		border-radius: 4px;
		box-shadow: 2px 2px 8px rgba(#000, 0.4);
		color: $reflex;
		display: inline-block;
		max-width: calc(100% - 3rem);
		padding: 2px;
		position: absolute;
		text-transform: uppercase;
		z-index: 10;

		.inner {
			@include fontBold;
			background-color: #FFF;
			border-radius: 4px;
			display: inline-block;
			font-size: 14px;
			padding: 0.5em 0.8em 0.4em;
		}
	}

	.even {
		top: 6rem;

		.label {
			bottom: 0;
			right: 1rem;
			transform: translateY(50%);
		}
	}

	.odd {
		.label {
			left: 1rem;
			top: 0;
			transform: translateY(-50%);
		}
	}

	&.reduced_motion {
		padding-bottom: 12rem;
		padding-top: 6rem;

		.Column {
			&.odd {
				transform: translateY(-3rem);
			}

			&.even {
				transform: translateY(3rem);
			}
		}
	}
}

@media (max-width:$xsMax) {
	.ParallaxMosaic {
		.Grid .Column {
			flex-basis: calc(50% - 1.5rem);
			margin-bottom: 6rem;
			margin-top: 6rem;
			max-width: calc(50% - 1.5rem);
		}

		.tile {}
	}
}

@media (min-width:$lg) {
	.ParallaxMosaic {
		padding-bottom: calc(min(16rem, 14vw));
		padding-top: calc(min(8rem, 6vw));
	}
}