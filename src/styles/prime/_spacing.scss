$space-scales:0,
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
25,
26,
28,
30,
32,
35,
36,
40,
42,
45,
60;

$padding-directions: ('': 'padding',
	't': 'padding-top',
	'r': 'padding-right',
	'l': 'padding-left',
	'b': 'padding-bottom',
	'x': ('padding-left', 'padding-right'),
	'y': ('padding-top', 'padding-bottom'));

$margin-directions: ('': 'margin',
	't': 'margin-top',
	'r': 'margin-right',
	'l': 'margin-left',
	'b': 'margin-bottom',
	'x': ('margin-left', 'margin-right'),
	'y': ('margin-top', 'margin-bottom'));

@mixin spacing-class($name, $directions, $scales, $auto: false, $negative: false) {

	@each $dir,
	$prop in $directions {
		@each $i in $scales {
			.#{$name}#{$dir}-#{$i} {
				@each $propName in $prop {
					#{$propName}: $spacer * $i !important;
				}
			}
		}

		@if ($negative) {
			@each $i in $scales {
				.-#{$name}#{$dir}-#{$i} {
					@each $propName in $prop {
						#{$propName}: -1 * $spacer * $i !important;
					}
				}
			}
		}

		@if ($auto) {
			.#{$name}#{$dir}-auto {
				@each $propName in $prop {
					#{$propName}: auto !important;
				}
			}
		}
	}

	@each $key,
	$val in $breakpoints {
		@media screen and (min-width: #{$val}) {

			@each $dir,
			$prop in $directions {
				@each $i in $scales {
					.#{$key + $separator}#{$name}#{$dir}-#{$i} {
						@each $propName in $prop {
							#{$propName}: $spacer * $i !important;
							;
						}
					}
				}

				@if ($negative) {
					@each $i in $scales {
						.#{$key + $separator}-#{$name}#{$dir}-#{$i} {
							@each $propName in $prop {
								#{$propName}: -1 * $spacer * $i !important;
							}
						}
					}
				}

				@if ($auto) {
					.#{$key + $separator}#{$name}#{$dir}-auto {
						@each $propName in $prop {
							#{$propName}: auto !important;
						}
					}
				}
			}
		}
	}
}

@include spacing-class('p', $padding-directions, $space-scales);
@include spacing-class('m', $margin-directions, $space-scales, true, true);